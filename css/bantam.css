/* Compiler */

/*@import "media-queries.css";*/
/*@import "box-sizing.css";*/
/* Widths */
.width-10 {
    width: 10%
}
.width-20 {
    width: 20%
}
.width-25 {
    width: 25%
}
.width-30 {
    width: 30%
}
.width-40 {
    width: 40%
}
.width-50 {
    width: 50%
}
.width-60 {
    width: 60%
}
.width-70 {
    width: 70%
}
.width-75 {
    width: 75%
}
.width-80 {
    width: 80%
}
.width-90 {
    width: 90%
}
.width-100 {
    width: 100%
}
@include bp(s) {
    .bps-width-10 {
        width: 10%
    }
    .bps-width-20 {
        width: 20%
    }
    .bps-width-25 {
        width: 25%
    }
    .bps-width-30 {
        width: 30%
    }
    .bps-width-40 {
        width: 40%
    }
    .bps-width-50 {
        width: 50%
    }
    .bps-width-60 {
        width: 60%
    }
    .bps-width-70 {
        width: 70%
    }
    .bps-width-75 {
        width: 75%
    }
    .bps-width-80 {
        width: 80%
    }
    .bps-width-90 {
        width: 90%
    }
    .bps-width-100 {
        width: 100%
    }
}
@include bp(m) {
    .bpm-width-10 {
        width: 10%
    }
    .bpm-width-20 {
        width: 20%
    }
    .bpm-width-25 {
        width: 25%
    }
    .bpm-width-30 {
        width: 30%
    }
    .bpm-width-40 {
        width: 40%
    }
    .bpm-width-50 {
        width: 50%
    }
    .bpm-width-60 {
        width: 60%
    }
    .bpm-width-70 {
        width: 70%
    }
    .bpm-width-75 {
        width: 75%
    }
    .bpm-width-80 {
        width: 80%
    }
    .bpm-width-90 {
        width: 90%
    }
    .bpm-width-100 {
        width: 100%
    }
}
@include bp(l) {
    .bpl-width-10 {
        width: 10%
    }
    .bpl-width-20 {
        width: 20%
    }
    .bpl-width-25 {
        width: 25%
    }
    .bpl-width-30 {
        width: 30%
    }
    .bpl-width-40 {
        width: 40%
    }
    .bpl-width-50 {
        width: 50%
    }
    .bpl-width-60 {
        width: 60%
    }
    .bpl-width-70 {
        width: 70%
    }
    .bpl-width-75 {
        width: 75%
    }
    .bpl-width-80 {
        width: 80%
    }
    .bpl-width-90 {
        width: 90%
    }
    .bpl-width-100 {
        width: 100%
    }
}
/* Heights */
.height-10 {
    height: 10%
}
.height-20 {
    height: 20%
}
.height-25 {
    height: 25%
}
.height-30 {
    height: 30%
}
.height-40 {
    height: 40%
}
.height-50 {
    height: 50%
}
.height-60 {
    height: 60%
}
.height-70 {
    height: 70%
}
.height-75 {
    height: 75%
}
.height-80 {
    height: 80%
}
.height-90 {
    height: 90%
}
.height-100 {
    height: 100%
}
@include bp(s) {
    .bps-height-10 {
        height: 10%
    }
    .bps-height-20 {
        height: 20%
    }
    .bps-height-25 {
        height: 25%
    }
    .bps-height-30 {
        height: 30%
    }
    .bps-height-40 {
        height: 40%
    }
    .bps-height-50 {
        height: 50%
    }
    .bps-height-60 {
        height: 60%
    }
    .bps-height-70 {
        height: 70%
    }
    .bps-height-75 {
        height: 75%
    }
    .bps-height-80 {
        height: 80%
    }
    .bps-height-90 {
        height: 90%
    }
    .bps-height-100 {
        height: 100%
    }
}
@include bp(m) {
    .bpm-height-10 {
        height: 10%
    }
    .bpm-height-20 {
        height: 20%
    }
    .bpm-height-25 {
        height: 25%
    }
    .bpm-height-30 {
        height: 30%
    }
    .bpm-height-40 {
        height: 40%
    }
    .bpm-height-50 {
        height: 50%
    }
    .bpm-height-60 {
        height: 60%
    }
    .bpm-height-70 {
        height: 70%
    }
    .bpm-height-75 {
        height: 75%
    }
    .bpm-height-80 {
        height: 80%
    }
    .bpm-height-90 {
        height: 90%
    }
    .bpm-height-100 {
        height: 100%
    }
}
@include bp(l) {
    .bpl-height-10 {
        height: 10%
    }
    .bpl-height-20 {
        height: 20%
    }
    .bpl-height-25 {
        height: 25%
    }
    .bpl-height-30 {
        height: 30%
    }
    .bpl-height-40 {
        height: 40%
    }
    .bpl-height-50 {
        height: 50%
    }
    .bpl-height-60 {
        height: 60%
    }
    .bpl-height-70 {
        height: 70%
    }
    .bpl-height-75 {
        height: 75%
    }
    .bpl-height-80 {
        height: 80%
    }
    .bpl-height-90 {
        height: 90%
    }
    .bpl-height-100 {
        height: 100%
    }
}
/* Clear */
.clear-none {
    clear: none
}
.clear-left {
    clear: left
}
.clear-right {
    clear: right
}
.clear-both {
    clear: both
}
@include bp(s) {
    .bps-clear-none {
        clear: none
    }
    .bps-clear-left {
        clear: left
    }
    .bps-clear-right {
        clear: right
    }
    .bps-clear-both {
        clear: both
    }
}
@include bp(m) {
    .bpm-clear-none {
        clear: none
    }
    .bpm-clear-left {
        clear: left
    }
    .bpm-clear-right {
        clear: right
    }
    .bpm-clear-both {
        clear: both
    }
}
@include bp(l) {
    .bpl-clear-none {
        clear: none
    }
    .bpl-clear-left {
        clear: left
    }
    .bpl-clear-right {
        clear: right
    }
    .bpl-clear-both {
        clear: both
    }
}
/* Float */
.float-none {
    float: none
}
.float-left {
    float: left
}
.float-right {
    float: right
}
@include bp(s) {
    .bps-float-none {
        float: none
    }
    .bps-float-left {
        float: left
    }
    .bps-float-right {
        float: right
    }
}
@include bp(m) {
    .bpm-float-none {
        float: none
    }
    .bpm-float-left {
        float: left
    }
    .bpm-float-right {
        float: right
    }
}
@include bp(l) {
    .bpl-float-none {
        float: none
    }
    .bpl-float-left {
        float: left
    }
    .bpl-float-right {
        float: right
    }
}
/* Display */
.display-none {
    display: none
}
.display-block {
    display: block
}
.display-inline {
    display: inline
}
.display-inlineBlock {
    display: inline-block
}
.display-inlineTable {
    display: inline-table
}
.display-table {
    display: table
}
.display-tableCell {
    display: table-cell
}
.display-tableColumn {
    display: table-column
}
.display-tableRow {
    display: table-row
}
@include bp(s) {
    .bps-display-none {
        display: none
    }
    .bps-display-block {
        display: block
    }
    .bps-display-inline {
        display: inline
    }
    .bps-display-inlineBlock {
        display: inline-block
    }
    .bps-display-inlineTable {
        display: inline-table
    }
    .bps-display-table {
        display: table
    }
    .bps-display-tableCell {
        display: table-cell
    }
    .bps-display-tableColumn {
        display: table-column
    }
    .bps-display-tableRow {
        display: table-row
    }
}
@include bp(m) {
    .bpm-display-none {
        display: none
    }
    .bpm-display-block {
        display: block
    }
    .bpm-display-inline {
        display: inline
    }
    .bpm-display-inlineBlock {
        display: inline-block
    }
    .bpm-display-inlineTable {
        display: inline-table
    }
    .bpm-display-table {
        display: table
    }
    .bpm-display-tableCell {
        display: table-cell
    }
    .bpm-display-tableColumn {
        display: table-column
    }
    .bpm-display-tableRow {
        display: table-row
    }
}
@include bp(l) {
    .bpl-display-none {
        display: none
    }
    .bpl-display-block {
        display: block
    }
    .bpl-display-inline {
        display: inline
    }
    .bpl-display-inlineBlock {
        display: inline-block
    }
    .bpl-display-inlineTable {
        display: inline-table
    }
    .bpl-display-table {
        display: table
    }
    .bpl-display-tableCell {
        display: table-cell
    }
    .bpl-display-tableColumn {
        display: table-column
    }
    .bpl-display-tableRow {
        display: table-row
    }
}
/* Text Align */
.ta-left {
    text-align: left
}
.ta-center {
    text-align: center
}
.ta-right {
    text-align: right
}
@include bp(s) {
    .bps-ta-left {
        text-align: left
    }
    .bps-ta-center {
        text-align: center
    }
    .bps-ta-right {
        text-align: right
    }
}
@include bp(m) {
    .bpm-ta-left {
        text-align: left
    }
    .bpm-ta-center {
        text-align: center
    }
    .bpm-ta-right {
        text-align: right
    }
}
@include bp(l) {
    .bpl-ta-left {
        text-align: left
    }
    .bpl-ta-center {
        text-align: center
    }
    .bpl-ta-right {
        text-align: right
    }
}
/* Cursor */
.cursor-alias {
    cursor: alias
}
.cursor-allScroll {
    cursor: all-scroll
}
.cursor-auto {
    cursor: auto
}
.cursor-cell {
    cursor: cell
}
.cursor-contextMenu {
    cursor: context-menu
}
.cursor-colResize {
    cursor: col-resize
}
.cursor-copy {
    cursor: copy
}
.cursor-crosshair {
    cursor: crosshair
}
.cursor-default {
    cursor: default
}
.cursor-eResize {
    cursor: e-resize
}
.cursor-ewResize {
    cursor: ew-resize
}
.cursor-grab {
    cursor: grab
}
.cursor-grabbing {
    cursor: grabbing
}
.cursor-help {
    cursor: help
}
.cursor-move {
    cursor: move
}
.cursor-nResize {
    cursor: n-resize
}
.cursor-neResize {
    cursor: ne-resize
}
.cursor-neswResize {
    cursor: nesw-resize
}
.cursor-nsResize {
    cursor: ns-resize
}
.cursor-nwResize {
    cursor: nw-resize
}
.cursor-nwseResize {
    cursor: nwse-resize
}
.cursor-noDrop {
    cursor: no-drop
}
.cursor-none {
    cursor: none
}
.cursor-notAllowed {
    cursor: not-allowed
}
.cursor-pointer {
    cursor: pointer
}
.cursor-progress {
    cursor: progress
}
.cursor-rowResize {
    cursor: row-resize
}
.cursor-sResize {
    cursor: s-resize
}
.cursor-seResize {
    cursor: se-resize
}
.cursor-swResize {
    cursor: sw-resize
}
.cursor-text {
    cursor: text
}
.cursor-verticalText {
    cursor: vertical-text
}
.cursor-wResize {
    cursor: w-resize
}
.cursor-wait {
    cursor: wait
}
.cursor-zoomIn {
    cursor: zoom-in
}
.cursor-zoomOut {
    cursor: zoom-out
}
@include bp(s) {
    .bps-cursor-alias {
        cursor: alias
    }
    .bps-cursor-allScroll {
        cursor: all-scroll
    }
    .bps-cursor-auto {
        cursor: auto
    }
    .bps-cursor-cell {
        cursor: cell
    }
    .bps-cursor-contextMenu {
        cursor: context-menu
    }
    .bps-cursor-colResize {
        cursor: col-resize
    }
    .bps-cursor-copy {
        cursor: copy
    }
    .bps-cursor-crosshair {
        cursor: crosshair
    }
    .bps-cursor-default {
        cursor: default
    }
    .bps-cursor-eResize {
        cursor: e-resize
    }
    .bps-cursor-ewResize {
        cursor: ew-resize
    }
    .bps-cursor-grab {
        cursor: grab
    }
    .bps-cursor-grabbing {
        cursor: grabbing
    }
    .bps-cursor-help {
        cursor: help
    }
    .bps-cursor-move {
        cursor: move
    }
    .bps-cursor-nResize {
        cursor: n-resize
    }
    .bps-cursor-neResize {
        cursor: ne-resize
    }
    .bps-cursor-neswResize {
        cursor: nesw-resize
    }
    .bps-cursor-nsResize {
        cursor: ns-resize
    }
    .bps-cursor-nwResize {
        cursor: nw-resize
    }
    .bps-cursor-nwseResize {
        cursor: nwse-resize
    }
    .bps-cursor-noDrop {
        cursor: no-drop
    }
    .bps-cursor-none {
        cursor: none
    }
    .bps-cursor-notAllowed {
        cursor: not-allowed
    }
    .bps-cursor-pointer {
        cursor: pointer
    }
    .bps-cursor-progress {
        cursor: progress
    }
    .bps-cursor-rowResize {
        cursor: row-resize
    }
    .bps-cursor-sResize {
        cursor: s-resize
    }
    .bps-cursor-seResize {
        cursor: se-resize
    }
    .bps-cursor-swResize {
        cursor: sw-resize
    }
    .bps-cursor-text {
        cursor: text
    }
    .bps-cursor-verticalText {
        cursor: vertical-text
    }
    .bps-cursor-wResize {
        cursor: w-resize
    }
    .bps-cursor-wait {
        cursor: wait
    }
    .bps-cursor-zoomIn {
        cursor: zoom-in
    }
    .bps-cursor-zoomOut {
        cursor: zoom-out
    }
}
@include bp(m) {
    .bpm-cursor-alias {
        cursor: alias
    }
    .bpm-cursor-allScroll {
        cursor: all-scroll
    }
    .bpm-cursor-auto {
        cursor: auto
    }
    .bpm-cursor-cell {
        cursor: cell
    }
    .bpm-cursor-contextMenu {
        cursor: context-menu
    }
    .bpm-cursor-colResize {
        cursor: col-resize
    }
    .bpm-cursor-copy {
        cursor: copy
    }
    .bpm-cursor-crosshair {
        cursor: crosshair
    }
    .bpm-cursor-default {
        cursor: default
    }
    .bpm-cursor-eResize {
        cursor: e-resize
    }
    .bpm-cursor-ewResize {
        cursor: ew-resize
    }
    .bpm-cursor-grab {
        cursor: grab
    }
    .bpm-cursor-grabbing {
        cursor: grabbing
    }
    .bpm-cursor-help {
        cursor: help
    }
    .bpm-cursor-move {
        cursor: move
    }
    .bpm-cursor-nResize {
        cursor: n-resize
    }
    .bpm-cursor-neResize {
        cursor: ne-resize
    }
    .bpm-cursor-neswResize {
        cursor: nesw-resize
    }
    .bpm-cursor-nsResize {
        cursor: ns-resize
    }
    .bpm-cursor-nwResize {
        cursor: nw-resize
    }
    .bpm-cursor-nwseResize {
        cursor: nwse-resize
    }
    .bpm-cursor-noDrop {
        cursor: no-drop
    }
    .bpm-cursor-none {
        cursor: none
    }
    .bpm-cursor-notAllowed {
        cursor: not-allowed
    }
    .bpm-cursor-pointer {
        cursor: pointer
    }
    .bpm-cursor-progress {
        cursor: progress
    }
    .bpm-cursor-rowResize {
        cursor: row-resize
    }
    .bpm-cursor-sResize {
        cursor: s-resize
    }
    .bpm-cursor-seResize {
        cursor: se-resize
    }
    .bpm-cursor-swResize {
        cursor: sw-resize
    }
    .bpm-cursor-text {
        cursor: text
    }
    .bpm-cursor-verticalText {
        cursor: vertical-text
    }
    .bpm-cursor-wResize {
        cursor: w-resize
    }
    .bpm-cursor-wait {
        cursor: wait
    }
    .bpm-cursor-zoomIn {
        cursor: zoom-in
    }
    .bpm-cursor-zoomOut {
        cursor: zoom-out
    }
}
@include bp(l) {
    .bpl-cursor-alias {
        cursor: alias
    }
    .bpl-cursor-allScroll {
        cursor: all-scroll
    }
    .bpl-cursor-auto {
        cursor: auto
    }
    .bpl-cursor-cell {
        cursor: cell
    }
    .bpl-cursor-contextMenu {
        cursor: context-menu
    }
    .bpl-cursor-colResize {
        cursor: col-resize
    }
    .bpl-cursor-copy {
        cursor: copy
    }
    .bpl-cursor-crosshair {
        cursor: crosshair
    }
    .bpl-cursor-default {
        cursor: default
    }
    .bpl-cursor-eResize {
        cursor: e-resize
    }
    .bpl-cursor-ewResize {
        cursor: ew-resize
    }
    .bpl-cursor-grab {
        cursor: grab
    }
    .bpl-cursor-grabbing {
        cursor: grabbing
    }
    .bpl-cursor-help {
        cursor: help
    }
    .bpl-cursor-move {
        cursor: move
    }
    .bpl-cursor-nResize {
        cursor: n-resize
    }
    .bpl-cursor-neResize {
        cursor: ne-resize
    }
    .bpl-cursor-neswResize {
        cursor: nesw-resize
    }
    .bpl-cursor-nsResize {
        cursor: ns-resize
    }
    .bpl-cursor-nwResize {
        cursor: nw-resize
    }
    .bpl-cursor-nwseResize {
        cursor: nwse-resize
    }
    .bpl-cursor-noDrop {
        cursor: no-drop
    }
    .bpl-cursor-none {
        cursor: none
    }
    .bpl-cursor-notAllowed {
        cursor: not-allowed
    }
    .bpl-cursor-pointer {
        cursor: pointer
    }
    .bpl-cursor-progress {
        cursor: progress
    }
    .bpl-cursor-rowResize {
        cursor: row-resize
    }
    .bpl-cursor-sResize {
        cursor: s-resize
    }
    .bpl-cursor-seResize {
        cursor: se-resize
    }
    .bpl-cursor-swResize {
        cursor: sw-resize
    }
    .bpl-cursor-text {
        cursor: text
    }
    .bpl-cursor-verticalText {
        cursor: vertical-text
    }
    .bpl-cursor-wResize {
        cursor: w-resize
    }
    .bpl-cursor-wait {
        cursor: wait
    }
    .bpl-cursor-zoomIn {
        cursor: zoom-in
    }
    .bpl-cursor-zoomOut {
        cursor: zoom-out
    }
}
/* Vertical Align */
.va-baseline {
    vertical-align: baseline
}
.va-sub {
    vertical-align: sub
}
.va-super {
    vertical-align: super
}
.va-top {
    vertical-align: top
}
.va-textTop {
    vertical-align: text-top
}
.va-middle {
    vertical-align: middle
}
.va-bottom {
    vertical-align: bottom
}
.va-textBottom {
    vertical-align: text-bottom
}
@include bp(s) {
    .bps-va-baseline {
        vertical-align: baseline
    }
    .bps-va-sub {
        vertical-align: sub
    }
    .bps-va-super {
        vertical-align: super
    }
    .bps-va-top {
        vertical-align: top
    }
    .bps-va-textTop {
        vertical-align: text-top
    }
    .bps-va-middle {
        vertical-align: middle
    }
    .bps-va-bottom {
        vertical-align: bottom
    }
    .bps-va-textBottom {
        vertical-align: text-bottom
    }
}
@include bp(m) {
    .bpm-va-baseline {
        vertical-align: baseline
    }
    .bpm-va-sub {
        vertical-align: sub
    }
    .bpm-va-super {
        vertical-align: super
    }
    .bpm-va-top {
        vertical-align: top
    }
    .bpm-va-textTop {
        vertical-align: text-top
    }
    .bpm-va-middle {
        vertical-align: middle
    }
    .bpm-va-bottom {
        vertical-align: bottom
    }
    .bpm-va-textBottom {
        vertical-align: text-bottom
    }
}
@include bp(l) {
    .bpl-va-baseline {
        vertical-align: baseline
    }
    .bpl-va-sub {
        vertical-align: sub
    }
    .bpl-va-super {
        vertical-align: super
    }
    .bpl-va-top {
        vertical-align: top
    }
    .bpl-va-textTop {
        vertical-align: text-top
    }
    .bpl-va-middle {
        vertical-align: middle
    }
    .bpl-va-bottom {
        vertical-align: bottom
    }
    .bpl-va-textBottom {
        vertical-align: text-bottom
    }
}
/* Border Width */
.bw-0 {
    border-width: 0
}
.bwt-0 {
    border-top-width: 0
}
.bwr-0 {
    border-right-width: 0
}
.bwb-0 {
    border-bottom-width: 0
}
.bwl-0 {
    border-left-width: 0
}
.bw-1 {
    border-width: 1px
}
.bwt-1 {
    border-top-width: 1px
}
.bwr-1 {
    border-right-width: 1px
}
.bwb-1 {
    border-bottom-width: 1px
}
.bwl-1 {
    border-left-width: 1px
}
.bw-2 {
    border-width: 2px
}
.bwt-2 {
    border-top-width: 2px
}
.bwr-2 {
    border-right-width: 2px
}
.bwb-2 {
    border-bottom-width: 2px
}
.bwl-2 {
    border-left-width: 2px
}
/* Border Style */
.bs-none {
    border-style: none
}
.bs-dashed {
    border-style: dashed
}
.bs-dotted {
    border-style: dotted
}
.bs-solid {
    border-style: solid
}
@include bp(s) {
    .bps-bs-none {
        border-style: none
    }
    .bps-bs-dashed {
        border-style: dashed
    }
    .bps-bs-dotted {
        border-style: dotted
    }
    .bps-bs-solid {
        border-style: solid
    }
}
@include bp(m) {
    .bpm-bs-none {
        border-style: none
    }
    .bpm-bs-dashed {
        border-style: dashed
    }
    .bpm-bs-dotted {
        border-style: dotted
    }
    .bpm-bs-solid {
        border-style: solid
    }
}
@include bp(l) {
    .bpl-bs-none {
        border-style: none
    }
    .bpl-bs-dashed {
        border-style: dashed
    }
    .bpl-bs-dotted {
        border-style: dotted
    }
    .bpl-bs-solid {
        border-style: solid
    }
}
/* White Space */
.ws-normal {
    white-space: normal
}
.ws-nowrap {
    white-space: nowrap
}
.ws-pre {
    white-space: pre
}
.ws-preLine {
    white-space: pre-line
}
.ws-preWrap {
    white-space: pre-wrap
}
@include bp(s) {
    .bps-ws-normal {
        white-space: normal
    }
    .bps-ws-nowrap {
        white-space: nowrap
    }
    .bps-ws-pre {
        white-space: pre
    }
    .bps-ws-preLine {
        white-space: pre-line
    }
    .bps-ws-preWrap {
        white-space: pre-wrap
    }
}
@include bp(m) {
    .bpm-ws-normal {
        white-space: normal
    }
    .bpm-ws-nowrap {
        white-space: nowrap
    }
    .bpm-ws-pre {
        white-space: pre
    }
    .bpm-ws-preLine {
        white-space: pre-line
    }
    .bpm-ws-preWrap {
        white-space: pre-wrap
    }
}
@include bp(l) {
    .bpl-ws-normal {
        white-space: normal
    }
    .bpl-ws-nowrap {
        white-space: nowrap
    }
    .bpl-ws-pre {
        white-space: pre
    }
    .bpl-ws-preLine {
        white-space: pre-line
    }
    .bpl-ws-preWrap {
        white-space: pre-wrap
    }
}
/* Overflow */
.overflow-visible {
    overflow: visible
}
.overflow-hidden {
    overflow: hidden
}
.overflow-scroll {
    overflow: scroll
}
.overflow-auto {
    overflow: auto
}
.ox-visible {
    overflow-x: visible
}
.ox-hidden {
    overflow-x: hidden
}
.ox-scroll {
    overflow-x: scroll
}
.ox-auto {
    overflow-x: auto
}
.oy-visible {
    overflow-y: visible
}
.oy-hidden {
    overflow-y: hidden
}
.oy-scroll {
    overflow-y: scroll
}
.oy-auto {
    overflow-y: auto
}
/*@include bp(s) {
    .bps-overflow-visible   { overflow: visible; }
    .bps-overflow-hidden    { overflow: hidden; }
    .bps-overflow-scroll    { overflow: scroll; }
    .bps-overflow-auto      { overflow: auto; }

    .bps-ox-visible         { overflow-x: visible; }
    .bps-ox-hidden          { overflow-x: hidden; }
    .bps-ox-scroll          { overflow-x: scroll; }
    .bps-ox-auto            { overflow-x: auto; }

    .bps-oy-visible         { overflow-y: visible; }
    .bps-oy-hidden          { overflow-y: hidden; }
    .bps-oy-scroll          { overflow-y: scroll; }
    .bps-oy-auto            { overflow-y: auto; }
}

@include bp(m) {
    .bpm-overflow-visible   { overflow: visible; }
    .bpm-overflow-hidden    { overflow: hidden; }
    .bpm-overflow-scroll    { overflow: scroll; }
    .bpm-overflow-auto      { overflow: auto; }

    .bpm-ox-visible         { overflow-x: visible; }
    .bpm-ox-hidden          { overflow-x: hidden; }
    .bpm-ox-scroll          { overflow-x: scroll; }
    .bpm-ox-auto            { overflow-x: auto; }

    .bpm-oy-visible         { overflow-y: visible; }
    .bpm-oy-hidden          { overflow-y: hidden; }
    .bpm-oy-scroll          { overflow-y: scroll; }
    .bpm-oy-auto            { overflow-y: auto; }

@include bp(l) {
    .bpl-overflow-visible   { overflow: visible; }
    .bpl-overflow-hidden    { overflow: hidden; }
    .bpl-overflow-scroll    { overflow: scroll; }
    .bpl-overflow-auto      { overflow: auto; }

    .bpl-ox-visible         { overflow-x: visible; }
    .bpl-ox-hidden          { overflow-x: hidden; }
    .bpl-ox-scroll          { overflow-x: scroll; }
    .bpl-ox-auto            { overflow-x: auto; }

    .bpl-oy-visible         { overflow-y: visible; }
    .bpl-oy-hidden          { overflow-y: hidden; }
    .bpl-oy-scroll          { overflow-y: scroll; }
    .bpl-oy-auto            { overflow-y: auto; }
}*/
/* Position */
/* 1. Promote fixed elements onto a new layer for performance. */
.position-fixed {
    position: fixed;
    backface-visibility: hidden/* 1 */
}
.position-absolute {
    position: absolute
}
.position-relative {
    position: relative
}
.position-static {
    position: static
}
@include bp(s) {
    .bps-position-fixed {
        position: fixed;
        backface-visibility: hidden/* 1 */
    }
    .bps-position-absolute {
        position: absolute
    }
    .bps-position-relative {
        position: relative
    }
    .bps-position-static {
        position: static
    }
}
@include bp(m) {
    .bpm-position-fixed {
        position: fixed;
        backface-visibility: hidden/* 1 */
    }
    .bpm-position-absolute {
        position: absolute
    }
    .bpm-position-relative {
        position: relative
    }
    .bpm-position-static {
        position: static
    }
}
@include bp(l) {
    .bpl-position-fixed {
        position: fixed;
        backface-visibility: hidden/* 1 */
    }
    .bpl-position-absolute {
        position: absolute
    }
    .bpl-position-relative {
        position: relative
    }
    .bpl-position-static {
        position: static
    }
}
/* Backface Visibility */
.bv-hidden {
    backface-visibility: hidden
}
.bv-visible {
    backface-visibility: visible
}
@include bp(s) {
    .bps-bv-hidden {
        backface-visibility: hidden
    }
    .bps-bv-visible {
        backface-visibility: visible
    }
}
@include bp(m) {
    .bpm-bv-hidden {
        backface-visibility: hidden
    }
    .bpm-bv-visible {
        backface-visibility: visible
    }
}
@include bp(l) {
    .bpl-bv-hidden {
        backface-visibility: hidden
    }
    .bpl-bv-visible {
        backface-visibility: visible
    }
}
/* Appearance */
.appearance-none {
    appearance: none
}
.appearance-normal {
    appearance: normal
}
.appearance-window {
    appearance: window
}
.appearance-button {
    appearance: button
}
.appearance-menu {
    appearance: menu
}
.appearance-field {
    appearance: field
}
@include bp(s) {
    .bps-appearance-none {
        appearance: none
    }
    .bps-appearance-normal {
        appearance: normal
    }
    .bps-appearance-window {
        appearance: window
    }
    .bps-appearance-button {
        appearance: button
    }
    .bps-appearance-menu {
        appearance: menu
    }
    .bps-appearance-field {
        appearance: field
    }
}
@include bp(m) {
    .bpm-appearance-none {
        appearance: none
    }
    .bpm-appearance-normal {
        appearance: normal
    }
    .bpm-appearance-window {
        appearance: window
    }
    .bpm-appearance-button {
        appearance: button
    }
    .bpm-appearance-menu {
        appearance: menu
    }
    .bpm-appearance-field {
        appearance: field
    }
}
@include bp(l) {
    .bpl-appearance-none {
        appearance: none
    }
    .bpl-appearance-normal {
        appearance: normal
    }
    .bpl-appearance-window {
        appearance: window
    }
    .bpl-appearance-button {
        appearance: button
    }
    .bpl-appearance-menu {
        appearance: menu
    }
    .bpl-appearance-field {
        appearance: field
    }
}
/* Outline Style */
.os-none {
    outline-style: none
}
.os-dotted {
    outline-style: dotted
}
.os-dashed {
    outline-style: dashed
}
.os-solid {
    outline-style: solid
}
.os-double {
    outline-style: double
}
.os-groove {
    outline-style: groove
}
.os-ridge {
    outline-style: ridge
}
.os-inset {
    outline-style: inset
}
.os-outset {
    outline-style: outset
}
@include bp(s) {
    .bps-os-none {
        outline-style: none
    }
    .bps-os-dotted {
        outline-style: dotted
    }
    .bps-os-dashed {
        outline-style: dashed
    }
    .bps-os-solid {
        outline-style: solid
    }
    .bps-os-double {
        outline-style: double
    }
    .bps-os-groove {
        outline-style: groove
    }
    .bps-os-ridge {
        outline-style: ridge
    }
    .bps-os-inset {
        outline-style: inset
    }
    .bps-os-outset {
        outline-style: outset
    }
}
@include bp(m) {
    .bpm-os-none {
        outline-style: none
    }
    .bpm-os-dotted {
        outline-style: dotted
    }
    .bpm-os-dashed {
        outline-style: dashed
    }
    .bpm-os-solid {
        outline-style: solid
    }
    .bpm-os-double {
        outline-style: double
    }
    .bpm-os-groove {
        outline-style: groove
    }
    .bpm-os-ridge {
        outline-style: ridge
    }
    .bpm-os-inset {
        outline-style: inset
    }
    .bpm-os-outset {
        outline-style: outset
    }
}
@include bp(l) {
    .bpl-os-none {
        outline-style: none
    }
    .bpl-os-dotted {
        outline-style: dotted
    }
    .bpl-os-dashed {
        outline-style: dashed
    }
    .bpl-os-solid {
        outline-style: solid
    }
    .bpl-os-double {
        outline-style: double
    }
    .bpl-os-groove {
        outline-style: groove
    }
    .bpl-os-ridge {
        outline-style: ridge
    }
    .bpl-os-inset {
        outline-style: inset
    }
    .bpl-os-outset {
        outline-style: outset
    }
}
/* Outline Width */
.ow-1 {
    outline-width: 1px
}
.ow-2 {
    outline-width: 2px
}
@include bp(s) {
    .bps-ow-1 {
        outline-width: 1px
    }
    .bps-ow-2 {
        outline-width: 2px
    }
}
@include bp(m) {
    .bpm-ow-1 {
        outline-width: 1px
    }
    .bpm-ow-2 {
        outline-width: 2px
    }
}
@include bp(l) {
    .bpl-ow-1 {
        outline-width: 1px
    }
    .bpl-ow-2 {
        outline-width: 2px
    }
}
/* Text Decoration */
.td-none {
    text-decoration: none
}
.td-underline {
    text-decoration: underline
}
.td-overline {
    text-decoration: overline
}
.td-lineThrough {
    text-decoration: line-through
}
@include bp(s) {
    .bps-td-none {
        text-decoration: none
    }
    .bps-td-underline {
        text-decoration: underline
    }
    .bps-td-overline {
        text-decoration: overline
    }
    .bps-td-lineThrough {
        text-decoration: line-through
    }
}
@include bp(m) {
    .bpm-td-none {
        text-decoration: none
    }
    .bpm-td-underline {
        text-decoration: underline
    }
    .bpm-td-overline {
        text-decoration: overline
    }
    .bpm-td-lineThrough {
        text-decoration: line-through
    }
}
@include bp(l) {
    .bpl-td-none {
        text-decoration: none
    }
    .bpl-td-underline {
        text-decoration: underline
    }
    .bpl-td-overline {
        text-decoration: overline
    }
    .bpl-td-lineThrough {
        text-decoration: line-through
    }
}
/* Text Transform */
.tt-none {
    text-transform: none
}
.tt-capitalize {
    text-transform: capitalize
}
.tt-uppercase {
    text-transform: uppercase
}
.tt-lowercase {
    text-transform: lowercase
}
@include bp(s) {
    .bps-tt-none {
        text-transform: none
    }
    .bps-tt-capitalize {
        text-transform: capitalize
    }
    .bps-tt-uppercase {
        text-transform: uppercase
    }
    .bps-tt-lowercase {
        text-transform: lowercase
    }
}
@include bp(m) {
    .bpm-tt-none {
        text-transform: none
    }
    .bpm-tt-capitalize {
        text-transform: capitalize
    }
    .bpm-tt-uppercase {
        text-transform: uppercase
    }
    .bpm-tt-lowercase {
        text-transform: lowercase
    }
}
@include bp(l) {
    .bpl-tt-none {
        text-transform: none
    }
    .bpl-tt-capitalize {
        text-transform: capitalize
    }
    .bpl-tt-uppercase {
        text-transform: uppercase
    }
    .bpl-tt-lowercase {
        text-transform: lowercase
    }
}
/* Text Overflow */
.to-clip {
    text-overflow: clip
}
.to-ellipsis {
    text-overflow: ellipsis
}
.to-string {
    text-overflow: string
}
@include bp(s) {
    .bps-to-clip {
        text-overflow: clip
    }
    .bps-to-ellipsis {
        text-overflow: ellipsis
    }
    .bps-to-string {
        text-overflow: string
    }
}
@include bp(m) {
    .bpm-to-clip {
        text-overflow: clip
    }
    .bpm-to-ellipsis {
        text-overflow: ellipsis
    }
    .bpm-to-string {
        text-overflow: string
    }
}
@include bp(l) {
    .bpl-to-clip {
        text-overflow: clip
    }
    .bpl-to-ellipsis {
        text-overflow: ellipsis
    }
    .bpl-to-string {
        text-overflow: string
    }
}
/* List Style */
.ls-none {
    list-style-type: none
}
.ls-disc {
    list-style-type: disc
}
.ls-circle {
    list-style-type: circle
}
.ls-square {
    list-style-type: square
}
.ls-decimal {
    list-style-type: decimal
}
@include bp(s) {
    .bps-ls-none {
        list-style-type: none
    }
    .bps-ls-disc {
        list-style-type: disc
    }
    .bps-ls-circle {
        list-style-type: circle
    }
    .bps-ls-square {
        list-style-type: square
    }
    .bps-ls-decimal {
        list-style-type: decimal
    }
}
@include bp(m) {
    .bpm-ls-none {
        list-style-type: none
    }
    .bpm-ls-disc {
        list-style-type: disc
    }
    .bpm-ls-circle {
        list-style-type: circle
    }
    .bpm-ls-square {
        list-style-type: square
    }
    .bpm-ls-decimal {
        list-style-type: decimal
    }
}
@include bp(l) {
    .bpl-ls-none {
        list-style-type: none
    }
    .bpl-ls-disc {
        list-style-type: disc
    }
    .bpl-ls-circle {
        list-style-type: circle
    }
    .bpl-ls-square {
        list-style-type: square
    }
    .bpl-ls-decimal {
        list-style-type: decimal
    }
}
/* Opacity */
.opacity-0 {
    opacity: 0
}
.opacity-10 {
    opacity: .1
}
.opacity-20 {
    opacity: .2
}
.opacity-30 {
    opacity: .3
}
.opacity-40 {
    opacity: .4
}
.opacity-50 {
    opacity: .5
}
.opacity-60 {
    opacity: .6
}
.opacity-70 {
    opacity: .7
}
.opacity-80 {
    opacity: .8
}
.opacity-90 {
    opacity: .9
}
.opacity-100 {
    opacity: 1
}
@include bp(s) {
    .bps-opacity-0 {
        opacity: 0
    }
    .bps-opacity-10 {
        opacity: .1
    }
    .bps-opacity-20 {
        opacity: .2
    }
    .bps-opacity-30 {
        opacity: .3
    }
    .bps-opacity-40 {
        opacity: .4
    }
    .bps-opacity-50 {
        opacity: .5
    }
    .bps-opacity-60 {
        opacity: .6
    }
    .bps-opacity-70 {
        opacity: .7
    }
    .bps-opacity-80 {
        opacity: .8
    }
    .bps-opacity-90 {
        opacity: .9
    }
    .bps-opacity-100 {
        opacity: 1
    }
}
@include bp(m) {
    .bpm-opacity-0 {
        opacity: 0
    }
    .bpm-opacity-10 {
        opacity: .1
    }
    .bpm-opacity-20 {
        opacity: .2
    }
    .bpm-opacity-30 {
        opacity: .3
    }
    .bpm-opacity-40 {
        opacity: .4
    }
    .bpm-opacity-50 {
        opacity: .5
    }
    .bpm-opacity-60 {
        opacity: .6
    }
    .bpm-opacity-70 {
        opacity: .7
    }
    .bpm-opacity-80 {
        opacity: .8
    }
    .bpm-opacity-90 {
        opacity: .9
    }
    .bpm-opacity-100 {
        opacity: 1
    }
}
@include bp(l) {
    .bpl-opacity-0 {
        opacity: 0
    }
    .bpl-opacity-10 {
        opacity: .1
    }
    .bpl-opacity-20 {
        opacity: .2
    }
    .bpl-opacity-30 {
        opacity: .3
    }
    .bpl-opacity-40 {
        opacity: .4
    }
    .bpl-opacity-50 {
        opacity: .5
    }
    .bpl-opacity-60 {
        opacity: .6
    }
    .bpl-opacity-70 {
        opacity: .7
    }
    .bpl-opacity-80 {
        opacity: .8
    }
    .bpl-opacity-90 {
        opacity: .9
    }
    .bpl-opacity-100 {
        opacity: 1
    }
}
/* User Select */
.us-none {
    user-select: none
}
.us-none {
    user-select: auto
}
.us-none {
    user-select: text
}
.us-none {
    user-select: contain
}
.us-none {
    user-select: all
}
@include bp(s) {
    .bps-us-none {
        user-select: none
    }
    .bps-us-none {
        user-select: auto
    }
    .bps-us-none {
        user-select: text
    }
    .bps-us-none {
        user-select: contain
    }
    .bps-us-none {
        user-select: all
    }
}
@include bp(m) {
    .bpm-us-none {
        user-select: none
    }
    .bpm-us-none {
        user-select: auto
    }
    .bpm-us-none {
        user-select: text
    }
    .bpm-us-none {
        user-select: contain
    }
    .bpm-us-none {
        user-select: all
    }
}
@include bp(l) {
    .bpl-us-none {
        user-select: none
    }
    .bpl-us-none {
        user-select: auto
    }
    .bpl-us-none {
        user-select: text
    }
    .bpl-us-none {
        user-select: contain
    }
    .bpl-us-none {
        user-select: all
    }
}
/* Font Weight */
.fw-1 {
    font-weight: 100
}
.fw-2 {
    font-weight: 200
}
.fw-3 {
    font-weight: 300
}
.fw-4 {
    font-weight: 400
}
.fw-5 {
    font-weight: 500
}
.fw-6 {
    font-weight: 600
}
.fw-7 {
    font-weight: 700
}
.fw-8 {
    font-weight: 800
}
.fw-9 {
    font-weight: 900
}
@include bp(s) {
    .bps-fw-1 {
        font-weight: 100
    }
    .bps-fw-2 {
        font-weight: 200
    }
    .bps-fw-3 {
        font-weight: 300
    }
    .bps-fw-4 {
        font-weight: 400
    }
    .bps-fw-5 {
        font-weight: 500
    }
    .bps-fw-6 {
        font-weight: 600
    }
    .bps-fw-7 {
        font-weight: 700
    }
    .bps-fw-8 {
        font-weight: 800
    }
    .bps-fw-9 {
        font-weight: 900
    }
}
@include bp(m) {
    .bpm-fw-1 {
        font-weight: 100
    }
    .bpm-fw-2 {
        font-weight: 200
    }
    .bpm-fw-3 {
        font-weight: 300
    }
    .bpm-fw-4 {
        font-weight: 400
    }
    .bpm-fw-5 {
        font-weight: 500
    }
    .bpm-fw-6 {
        font-weight: 600
    }
    .bpm-fw-7 {
        font-weight: 700
    }
    .bpm-fw-8 {
        font-weight: 800
    }
    .bpm-fw-9 {
        font-weight: 900
    }
}
@include bp(l) {
    .bpl-fw-1 {
        font-weight: 100
    }
    .bpl-fw-2 {
        font-weight: 200
    }
    .bpl-fw-3 {
        font-weight: 300
    }
    .bpl-fw-4 {
        font-weight: 400
    }
    .bpl-fw-5 {
        font-weight: 500
    }
    .bpl-fw-6 {
        font-weight: 600
    }
    .bpl-fw-7 {
        font-weight: 700
    }
    .bpl-fw-8 {
        font-weight: 800
    }
    .bpl-fw-9 {
        font-weight: 900
    }
}
/* Font Style */
.fs-normal {
    font-style: normal
}
.fs-italic {
    font-style: italic
}
.fs-oblique {
    font-style: oblique
}
@include bp(s) {
    .bps-fs-normal {
        font-style: normal
    }
    .bps-fs-italic {
        font-style: italic
    }
    .bps-fs-oblique {
        font-style: oblique
    }
}
@include bp(m) {
    .bpm-fs-normal {
        font-style: normal
    }
    .bpm-fs-italic {
        font-style: italic
    }
    .bpm-fs-oblique {
        font-style: oblique
    }
}
@include bp(l) {
    .bpl-fs-normal {
        font-style: normal
    }
    .bpl-fs-italic {
        font-style: italic
    }
    .bpl-fs-oblique {
        font-style: oblique
    }
}
/* Visibility */
.visibility-hidden {
    visibility: hidden
}
.visibility-visible {
    visibility: visible
}
.visibility-collapse {
    visibility: collapse
}
@include bp(s) {
    .bps-visibility-hidden {
        visibility: hidden
    }
    .bps-visibility-visible {
        visibility: visible
    }
    .bps-visibility-collapse {
        visibility: collapse
    }
}
@include bp(m) {
    .bpm-visibility-hidden {
        visibility: hidden
    }
    .bpm-visibility-visible {
        visibility: visible
    }
    .bpm-visibility-collapse {
        visibility: collapse
    }
}
@include bp(l) {
    .bpl-visibility-hidden {
        visibility: hidden
    }
    .bpl-visibility-visible {
        visibility: visible
    }
    .bpl-visibility-collapse {
        visibility: collapse
    }
}
/* Position */
.direction-ltr {
    direction: ltr
}
.direction-rtl {
    direction: rtl
}
@include bp(s) {
    .bps-direction-ltr {
        direction: ltr
    }
    .bps-direction-rtl {
        direction: rtl
    }
}
@include bp(m) {
    .bpm-direction-ltr {
        direction: ltr
    }
    .bpm-direction-rtl {
        direction: rtl
    }
}
@include bp(l) {
    .bpl-direction-ltr {
        direction: ltr
    }
    .bpl-direction-rtl {
        direction: rtl
    }
}
/* Resize */
.resize-none {
    resize: none
}
.resize-both {
    resize: both
}
.resize-horizontal {
    resize: horizontal
}
.resize-vertical {
    resize: vertical
}
@include bp(s) {
    .bps-resize-none {
        resize: none
    }
    .bps-resize-both {
        resize: both
    }
    .bps-resize-horizontal {
        resize: horizontal
    }
    .bps-resize-vertical {
        resize: vertical
    }
}
@include bp(m) {
    .bpm-resize-none {
        resize: none
    }
    .bpm-resize-both {
        resize: both
    }
    .bpm-resize-horizontal {
        resize: horizontal
    }
    .bpm-resize-vertical {
        resize: vertical
    }
}
@include bp(l) {
    .bpl-resize-none {
        resize: none
    }
    .bpl-resize-both {
        resize: both
    }
    .bpl-resize-horizontal {
        resize: horizontal
    }
    .bpl-resize-vertical {
        resize: vertical
    }
}
/* Word Break */
.wb-normal {
    word-break: normal
}
.wb-breakAll {
    word-break: break-all
}
.wb-keepAll {
    word-break: keep-all
}
@include bp(s) {
    .bps-wb-normal {
        word-break: normal
    }
    .bps-wb-breakAll {
        word-break: break-all
    }
    .bps-wb-keepAll {
        word-break: keep-all
    }
}
@include bp(m) {
    .bpm-wb-normal {
        word-break: normal
    }
    .bpm-wb-breakAll {
        word-break: break-all
    }
    .bpm-wb-keepAll {
        word-break: keep-all
    }
}
@include bp(l) {
    .bpl-wb-normal {
        word-break: normal
    }
    .bpl-wb-breakAll {
        word-break: break-all
    }
    .bpl-wb-keepAll {
        word-break: keep-all
    }
}
/* Text Rendering */
.tr-auto {
    text-rendering: auto
}
.tr-optimizeSpeed {
    text-rendering: optimizeSpeed
}
.tr-optimizeLegibility {
    text-rendering: optimizeLegibility
}
.tr-geometricPrecision {
    text-rendering: geometricPrecision
}
@include bp(s) {
    .bps-tr-auto {
        text-rendering: auto
    }
    .bps-tr-optimizeSpeed {
        text-rendering: optimizeSpeed
    }
    .bps-tr-optimizeLegibility {
        text-rendering: optimizeLegibility
    }
    .bps-tr-geometricPrecision {
        text-rendering: geometricPrecision
    }
}
@include bp(m) {
    .bpm-tr-auto {
        text-rendering: auto
    }
    .bpm-tr-optimizeSpeed {
        text-rendering: optimizeSpeed
    }
    .bpm-tr-optimizeLegibility {
        text-rendering: optimizeLegibility
    }
    .bpm-tr-geometricPrecision {
        text-rendering: geometricPrecision
    }
}
@include bp(l) {
    .bpl-tr-auto {
        text-rendering: auto
    }
    .bpl-tr-optimizeSpeed {
        text-rendering: optimizeSpeed
    }
    .bpl-tr-optimizeLegibility {
        text-rendering: optimizeLegibility
    }
    .bpl-tr-geometricPrecision {
        text-rendering: geometricPrecision
    }
}
/* Transform Style */
.ts-flat {
    transform-style: flat
}
.ts-preserve3d {
    transform-style: preserve-3d
}
@include bp(s) {
    .bps-ts-flat {
        transform-style: flat
    }
    .bps-ts-preserve3d {
        transform-style: preserve-3d
    }
}
@include bp(m) {
    .bpm-ts-flat {
        transform-style: flat
    }
    .bpm-ts-preserve3d {
        transform-style: preserve-3d
    }
}
@include bp(l) {
    .bpl-ts-flat {
        transform-style: flat
    }
    .bpl-ts-preserve3d {
        transform-style: preserve-3d
    }
}
/* Transition Property */
.tp-none {
    transition-property: none
}
.tp-all {
    transition-property: all
}
.tp-color {
    transition-property: color
}
.tp-background {
    transition-property: background
}
.tp-width {
    transition-property: width
}
.tp-height {
    transition-property: height
}
.tp-top {
    transition-property: top
}
.tp-right {
    transition-property: right
}
.tp-bottom {
    transition-property: bottom
}
.tp-left {
    transition-property: left
}
.tp-scale {
    transition-property: scale
}
.tp-transform {
    transition-property: transform
}
.tp-opacity {
    transition-property: opacity
}
@include bp(s) {
    .bps-tp-none {
        transition-property: none
    }
    .bps-tp-all {
        transition-property: all
    }
    .bps-tp-color {
        transition-property: color
    }
    .bps-tp-background {
        transition-property: background
    }
    .bps-tp-width {
        transition-property: width
    }
    .bps-tp-height {
        transition-property: height
    }
    .bps-tp-top {
        transition-property: top
    }
    .bps-tp-right {
        transition-property: right
    }
    .bps-tp-bottom {
        transition-property: bottom
    }
    .bps-tp-left {
        transition-property: left
    }
    .bps-tp-scale {
        transition-property: scale
    }
    .bps-tp-transform {
        transition-property: transform
    }
    .bps-tp-opacity {
        transition-property: opacity
    }
}
@include bp(m) {
    .bpm-tp-none {
        transition-property: none
    }
    .bpm-tp-all {
        transition-property: all
    }
    .bpm-tp-color {
        transition-property: color
    }
    .bpm-tp-background {
        transition-property: background
    }
    .bpm-tp-width {
        transition-property: width
    }
    .bpm-tp-height {
        transition-property: height
    }
    .bpm-tp-top {
        transition-property: top
    }
    .bpm-tp-right {
        transition-property: right
    }
    .bpm-tp-bottom {
        transition-property: bottom
    }
    .bpm-tp-left {
        transition-property: left
    }
    .bpm-tp-scale {
        transition-property: scale
    }
    .bpm-tp-transform {
        transition-property: transform
    }
    .bpm-tp-opacity {
        transition-property: opacity
    }
}
@include bp(l) {
    .bpl-tp-none {
        transition-property: none
    }
    .bpl-tp-all {
        transition-property: all
    }
    .bpl-tp-color {
        transition-property: color
    }
    .bpl-tp-background {
        transition-property: background
    }
    .bpl-tp-width {
        transition-property: width
    }
    .bpl-tp-height {
        transition-property: height
    }
    .bpl-tp-top {
        transition-property: top
    }
    .bpl-tp-right {
        transition-property: right
    }
    .bpl-tp-bottom {
        transition-property: bottom
    }
    .bpl-tp-left {
        transition-property: left
    }
    .bpl-tp-scale {
        transition-property: scale
    }
    .bpl-tp-transform {
        transition-property: transform
    }
    .bpl-tp-opacity {
        transition-property: opacity
    }
}
/* Word Wrap */
.ww-normal {
    word-wrap: normal
}
.ww-breakWord {
    word-wrap: break-word
}
@include bp(s) {
    .bps-ww-normal {
        word-wrap: normal
    }
    .bps-ww-breakWord {
        word-wrap: break-word
    }
}
@include bp(m) {
    .bpm-ww-normal {
        word-wrap: normal
    }
    .bpm-ww-breakWord {
        word-wrap: break-word
    }
}
@include bp(l) {
    .bpl-ww-normal {
        word-wrap: normal
    }
    .bpl-ww-breakWord {
        word-wrap: break-word
    }
}
/* Tap Highlight */
/*  Prevent iOS adding a black background flash to elements when tapped. */
.thc-none {
    -webkit-tap-highlight-color: rgba(0,0,0,0)
}
