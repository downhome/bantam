//
// Buttons
// -------------------------

// To make a button, apply a size class to a link element.
// Then define your visual style in a different class
// and apply that. The functional CSS will get added
// via a sass placeholder. Any skin styles like color,
// background color or border color should be defined in
// a separate theme.scss file.

// user-select is not supported in Opera or > IE10. We can
// use the unselectable HTML attribute to get around this:
// <button unselectable="on"></button>

// Variables
// -------------------------

$btnHeight--l: 54px;
$btnHeight--m: 46px;
$btnHeight--s: 32px;

$btnPadding--l: 54px;
$btnPadding--m: 54px;
$btnPadding--s: 54px;

// Functionality
// -------------------------

/**
 * 1. Corrects inability to style clickable `input` types in iOS.
 * 5. Normalize `line-height`. For `input`, it can't be changed from `normal` in Firefox 4+.
 * 6. Prevent button text from being selectable.
 * 7. Make sure `input` will wrap text across multiple lines.
 * 8. Prevent black highlight on tap on iOS.
 */
 
%btn {
  @extend display--inlineBlock;
  line-height: 1; /* 5 */
  @extend td--none;
  @extend os--none;
  @extend va--top;
  @extend cursor--pointer;
  @extend appearance--none; /* 1 */
  @extend us--none; /* 6 */
  @extend ws--normal; /* 7 */
  @extend .u-preventTapHighlight; /* 7 */
}

// Button sizes
// -------------------------

.btn--l {
  @extend %btn;
  height: $btnHeight--l;
  line-height: $btnHeight--l;
  padding: 0 $btnPadding--l;
  @extend fs--l;
}

.btn--m {
  @extend %btn;
  height: $btnHeight--m;
  line-height: $btnHeight--m;
  padding: 0 $btnPadding--m;
  @extend fs--m;
}

.btn--s {
  @extend %btn;
  height: $btnHeight--s;
  line-height: $btnHeight--s;
  padding: 0 $btnPadding--s;
  @extend fs--s;
}

// Button styles
// -------------------------

.btn--flat {
  @extend .bg--accent;
  border: 0;
  &:hover {
    background: darken($brand-1, 10%);
  }
}